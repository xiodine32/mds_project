<?php

/**
 * Created at: 01/04/16 12:31
 * Generated by migration.php
 */

namespace Models;

use SmartModel;

/**
 * Model Employee.
 * @package Models
 */
class ModelEmployee extends SmartModel implements \ISessionable
{
    /**
     * @var int $employeeID
     */
    public $employeeID;

    /**
     * @var int|null $roleID
     */
    public $roleID;

    /**
     * @var string $account
     */
    public $account;

    /**
     * @var string $password
     */
    public $password;

    /**
     * @var int|null $managerID
     */
    public $managerID;

    /**
     * @var int|null $departmentID
     */
    public $departmentID;

    /**
     * @var string $firstName
     */
    public $firstName;

    /**
     * @var string|null $middleInitial
     */
    public $middleInitial;

    /**
     * @var string $lastName
     */
    public $lastName;

    /**
     * @var string $title
     */
    public $title;

    /**
     * @var string $cnp
     */
    public $cnp;

    /**
     * @var double $salary
     */
    public $salary;

    /**
     * @var double $priorSalary
     */
    public $priorSalary;

    /**
     * @var string $hireDate
     */
    public $hireDate;

    /**
     * @var string|null $terminationDate
     */
    public $terminationDate;

    /**
     * @var int $administrator
     */
    public $administrator;


    /**
     * ModelEmployee constructor.
     */
    public function __construct()
    {
        parent::__construct($this, "Employees");
    }

    /**
     * Reads the model from session.
     * @return false|ModelEmployee
     */
    static function fromSession()
    {
        if (!isset($_SESSION['employee']))
            return false;
        return unserialize($_SESSION['employee']);
    }

    /**
     * Removes the item from session.
     * @param $item \ISessionable
     */
    static function unsetSession($item)
    {
        unset($_SESSION['employee']);
    }

    /**
     * Tries to login Employee with requested password.
     * @param string $password
     * @return bool True if Employee logged in successfully.
     */
    public function tryLogin($password)
    {
        // if password is not encrypted (migration tool), transform it into bcrypt password and update model.
        if ($this->password === $password) {
            $this->password = password_hash($this->password, PASSWORD_BCRYPT);
            self::update();
            self::toSession($this);
            return true;
        }

        // if not valid
        if (!password_verify($password, $this->password)) {
            return false;
        }

        // save to session
        self::toSession($this);

        return true;
    }

    /**
     * Saves the model to session.
     * @param \ISessionable $item
     */
    static function toSession($item)
    {
        $_SESSION['employee'] = serialize($item);
    }


    /**
     * Encrypts the password.
     * @param mixed $password
     */
    public function setPassword($password)
    {
        $this->password = password_hash($password, PASSWORD_BCRYPT);
    }
}