<?php

/**
 * Created at: 01/04/16 12:31
 * Generated by migration.php
 */

namespace Models;

/**
 * Model Employee.
 * @package Models
 */
class ModelEmployee extends Generated\ModelEmployee implements \Sessionable
{
    /**
     * Reads the model from session.
     * @param \Request $request
     * @return false|ModelEmployee
     */
    static function fromSession($request)
    {
        if ($request->getSession('employee') === null)
            return false;
        return unserialize($request->getSession('employee'));
    }

    /**
     * Removes the item from session.
     * @param \Request $request
     */
    static function unsetSession($request)
    {
        $request->delSession('employee');
    }

    /**
     * Tries to login Employee with requested password.
     * @param string $password
     * @param \Request $request
     * @return bool True if Employee logged in successfully.
     */
    public function tryLogin($password, $request)
    {
        // if password is not encrypted (migration tool), transform it into bcrypt password and update model.
        if ($this->password === $password) {
            $this->password = password_hash($this->password, PASSWORD_BCRYPT);
            self::update();
            self::toSession($this, $request);
            return true;
        }

        // if not valid
        if (!password_verify($password, $this->password)) {
            return false;
        }

        // save to session
        self::toSession($this, $request);

        return true;
    }

    /**
     * Saves the model to session.
     * @param \Sessionable $item
     * @param \Request $request
     */
    static function toSession($item, $request)
    {
        $request->setSession('employee', serialize($item));
    }


    /**
     * Encrypts the password.
     * @param mixed $password
     */
    public function setPassword($password)
    {
        $this->password = password_hash($password, PASSWORD_BCRYPT);
    }
}